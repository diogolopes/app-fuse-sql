package https.hom_infoconv_receita_fazenda_gov_br.ws.cpf;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.4.4
 * 2021-07-16T16:25:03.478-03:00
 * Generated source version: 3.4.4
 *
 */
@WebServiceClient(name = "ConsultarCPF",
                  wsdlLocation = "file:/home/dilopes/repo/spring-boot/app-fuse/src/main/resources/wsdl/cpf_hom.wsdl",
                  targetNamespace = "https://hom-infoconv.receita.fazenda.gov.br/ws/cpf/")
public class ConsultarCPF extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("https://hom-infoconv.receita.fazenda.gov.br/ws/cpf/", "ConsultarCPF");
    public final static QName ConsultarCPFSoap = new QName("https://hom-infoconv.receita.fazenda.gov.br/ws/cpf/", "ConsultarCPFSoap");
    public final static QName ConsultarCPFSoap12 = new QName("https://hom-infoconv.receita.fazenda.gov.br/ws/cpf/", "ConsultarCPFSoap12");
    static {
        URL url = null;
        try {
            url = new URL("file:/home/dilopes/repo/spring-boot/app-fuse/src/main/resources/wsdl/cpf_hom.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ConsultarCPF.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "file:/home/dilopes/repo/spring-boot/app-fuse/src/main/resources/wsdl/cpf_hom.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ConsultarCPF(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ConsultarCPF(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ConsultarCPF() {
        super(WSDL_LOCATION, SERVICE);
    }

    public ConsultarCPF(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public ConsultarCPF(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public ConsultarCPF(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns ConsultarCPFSoap
     */
    @WebEndpoint(name = "ConsultarCPFSoap")
    public ConsultarCPFSoap getConsultarCPFSoap() {
        return super.getPort(ConsultarCPFSoap, ConsultarCPFSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ConsultarCPFSoap
     */
    @WebEndpoint(name = "ConsultarCPFSoap")
    public ConsultarCPFSoap getConsultarCPFSoap(WebServiceFeature... features) {
        return super.getPort(ConsultarCPFSoap, ConsultarCPFSoap.class, features);
    }


    /**
     *
     * @return
     *     returns ConsultarCPFSoap
     */
    @WebEndpoint(name = "ConsultarCPFSoap12")
    public ConsultarCPFSoap getConsultarCPFSoap12() {
        return super.getPort(ConsultarCPFSoap12, ConsultarCPFSoap.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ConsultarCPFSoap
     */
    @WebEndpoint(name = "ConsultarCPFSoap12")
    public ConsultarCPFSoap getConsultarCPFSoap12(WebServiceFeature... features) {
        return super.getPort(ConsultarCPFSoap12, ConsultarCPFSoap.class, features);
    }

}
